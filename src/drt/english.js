// Generated automatically by nearley, version 2.13.0
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }

function node(type, types, children, loc) {
  // console.log(type + ": " + JSON.stringify(types) + " => ");
  return {
    "@type": type, 
    "types": types, 
    "children": children
      .filter(child => child != null)
      .filter(child => child != '.'),
    "loc": loc
  };
}

// TODO(goto): add all reserved keywords for terms that
// can occupy the same position as proper names (pronouns
// were most obvious, but maybe there are more).

const reserved = ["he", "she", "it", "they", "him", "her", "them", "his", "hers", "theirs"];

function name(head, tail, reject) {
  let result = head.join("") + tail.join("");
  if (reserved.includes(result.toLowerCase())) {
    return reject;
  }
  return result;
}
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["_$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["__$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "Discourse$ebnf$1$subexpression$1", "symbols": ["_", "Sentence", "_"], "postprocess": (args) => args[1]},
    {"name": "Discourse$ebnf$1", "symbols": ["Discourse$ebnf$1$subexpression$1"]},
    {"name": "Discourse$ebnf$1$subexpression$2", "symbols": ["_", "Sentence", "_"], "postprocess": (args) => args[1]},
    {"name": "Discourse$ebnf$1", "symbols": ["Discourse$ebnf$1", "Discourse$ebnf$1$subexpression$2"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Discourse", "symbols": ["Discourse$ebnf$1"], "postprocess": (args) => node("Discourse", {}, ...args)},
    {"name": "FULLNAME$ebnf$1$subexpression$1", "symbols": ["NAME", "_"]},
    {"name": "FULLNAME$ebnf$1", "symbols": ["FULLNAME$ebnf$1$subexpression$1"]},
    {"name": "FULLNAME$ebnf$1$subexpression$2", "symbols": ["NAME", "_"]},
    {"name": "FULLNAME$ebnf$1", "symbols": ["FULLNAME$ebnf$1", "FULLNAME$ebnf$1$subexpression$2"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "FULLNAME", "symbols": ["FULLNAME$ebnf$1"], "postprocess": ([args]) => args.map(name => name[0]).join(" ")},
    {"name": "NAME$ebnf$1", "symbols": [/[A-Z]/]},
    {"name": "NAME$ebnf$1", "symbols": ["NAME$ebnf$1", /[A-Z]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "NAME$ebnf$2", "symbols": [/[a-z]/]},
    {"name": "NAME$ebnf$2", "symbols": ["NAME$ebnf$2", /[a-z]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "NAME", "symbols": ["NAME$ebnf$1", "NAME$ebnf$2"], "postprocess": ([a, b], location, reject) => name(a, b, reject)},
    {"name": "VAR", "symbols": [/[A-Z]/], "postprocess": ([name]) => name},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_p_tp_npast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_p_tp_npast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_p_tp_npast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_n_tp_npast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_n_tp_npast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_sing_stat_n_tp_npast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_p_tp_npast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_p_tp_npast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_p_tp_npast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_n_tp_npast_tense_pres", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_n_tp_npast_tense_past", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence", "symbols": ["S_num_plur_stat_n_tp_npast_tense_fut", "_", {"literal":"."}], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$1", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$2", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$1", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "_", "Sentence$subexpression$2"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$3", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$4", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$3", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "_", "Sentence$subexpression$4"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$5", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$6", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$5", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "_", "Sentence$subexpression$6"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$7", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$8", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$7", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "_", "Sentence$subexpression$8"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$9", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$10", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$9", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "_", "Sentence$subexpression$10"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$11", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$12", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$11", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "_", "Sentence$subexpression$12"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$13", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$14", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$13", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "_", "Sentence$subexpression$14"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$15", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$16", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$15", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "_", "Sentence$subexpression$16"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$17", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$18", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$17", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "_", "Sentence$subexpression$18"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$19", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$20", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$19", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "_", "Sentence$subexpression$20"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$21", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$22", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$21", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "_", "Sentence$subexpression$22"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$23", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$24", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$23", "_", "NP_num_sing_case_pnom_gap_sing", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "_", "Sentence$subexpression$24"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$25", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$26", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$25", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "_", "Sentence$subexpression$26"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$27", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$28", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$27", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "_", "Sentence$subexpression$28"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$29", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$30", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$29", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "_", "Sentence$subexpression$30"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$31", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$32", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$31", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "_", "Sentence$subexpression$32"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$33", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$34", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$33", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "_", "Sentence$subexpression$34"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$35", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$36", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$35", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "_", "Sentence$subexpression$36"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$37", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$38", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$37", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "_", "Sentence$subexpression$38"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$39", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$40", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$39", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "_", "Sentence$subexpression$40"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$41", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$42", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$41", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "_", "Sentence$subexpression$42"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$43", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$44", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$43", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "_", "Sentence$subexpression$44"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$45", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$46", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$45", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "_", "Sentence$subexpression$46"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$47", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$48", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$47", "_", "NP_num_plur_case_pnom_gap_plur", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "_", "Sentence$subexpression$48"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$49", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$50", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$49", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "_", "Sentence$subexpression$50"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$51", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$52", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$51", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "_", "Sentence$subexpression$52"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$53", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$54", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$53", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "_", "Sentence$subexpression$54"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$55", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$56", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$55", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "_", "Sentence$subexpression$56"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$57", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$58", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$57", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "_", "Sentence$subexpression$58"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$59", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$60", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$59", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "_", "Sentence$subexpression$60"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$61", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$62", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$61", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "_", "Sentence$subexpression$62"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$63", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$64", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$63", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "_", "Sentence$subexpression$64"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$65", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$66", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$65", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "_", "Sentence$subexpression$66"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$67", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$68", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$67", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "_", "Sentence$subexpression$68"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$69", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$70", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$69", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "_", "Sentence$subexpression$70"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$71", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$72", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$71", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "_", "Sentence$subexpression$72"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$73", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$74", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$73", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "_", "Sentence$subexpression$74"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$75", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$76", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$75", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "_", "Sentence$subexpression$76"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$77", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$78", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$77", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "_", "Sentence$subexpression$78"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$79", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$80", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$79", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "_", "Sentence$subexpression$80"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$81", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$82", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$81", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "_", "Sentence$subexpression$82"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$83", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$84", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$83", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "_", "Sentence$subexpression$84"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$85", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$86", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$85", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "_", "Sentence$subexpression$86"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$87", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$88", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$87", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "_", "Sentence$subexpression$88"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$89", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$90", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$89", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "_", "Sentence$subexpression$90"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$91", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$92", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$91", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "_", "Sentence$subexpression$92"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$93", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$94", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$93", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "_", "Sentence$subexpression$94"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$95", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$96", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$95", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "_", "Sentence$subexpression$96"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$97", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$98", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$97", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "_", "Sentence$subexpression$98"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$99", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$100", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$99", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "_", "Sentence$subexpression$100"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$101", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$102", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$101", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "_", "Sentence$subexpression$102"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$103", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$104", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$103", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "_", "Sentence$subexpression$104"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$105", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$106", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$105", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "_", "Sentence$subexpression$106"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$107", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$108", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$107", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "_", "Sentence$subexpression$108"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$109", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$110", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$109", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "_", "Sentence$subexpression$110"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$111", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$112", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$111", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "_", "Sentence$subexpression$112"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$113", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$114", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$113", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "_", "Sentence$subexpression$114"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$115", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$116", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$115", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "_", "Sentence$subexpression$116"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$117", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$118", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$117", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "_", "Sentence$subexpression$118"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$119", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$120", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$119", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "_", "Sentence$subexpression$120"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$121", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$122", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$121", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "_", "Sentence$subexpression$122"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$123", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$124", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$123", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "_", "Sentence$subexpression$124"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$125", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$126", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$125", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "_", "Sentence$subexpression$126"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$127", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$128", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$127", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "_", "Sentence$subexpression$128"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$129", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$130", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$129", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "_", "Sentence$subexpression$130"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$131", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$132", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$131", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "_", "Sentence$subexpression$132"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$133", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$134", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$133", "__", "AUX_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "_", "Sentence$subexpression$134"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$135", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$136", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$135", "__", "AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "_", "Sentence$subexpression$136"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$137", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$138", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$137", "__", "AUX_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "_", "Sentence$subexpression$138"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$139", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$140", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$139", "__", "AUX_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "_", "Sentence$subexpression$140"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$141", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$142", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$141", "__", "AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "_", "Sentence$subexpression$142"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$143", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$144", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$143", "__", "AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "_", "Sentence$subexpression$144"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "Sentence$subexpression$145", "symbols": [/[iI]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence$subexpression$146", "symbols": [{"literal":"?"}], "postprocess": function(d) {return d.join(""); }},
    {"name": "Sentence", "symbols": ["Sentence$subexpression$145", "__", "NP_num_sing_case_pnom_gap_n", "__", "ADJ", "_", "Sentence$subexpression$146"], "postprocess": (args, loc) => node("Sentence", {}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$1", "__", "S_num_sing_stat_p_tp_ppast_tense_pres", "__", "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$2", "__", "S_num_sing_stat_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_pres", "__", "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$3", "__", "S_num_sing_stat_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_pres", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_pres", "__", "S_num_sing_stat_p_tp_ppast_tense_pres$subexpression$4", "__", "S_num_sing_stat_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres", "symbols": ["S_num_sing_stat_p_tp_npast_tense_pres$subexpression$1", "__", "S_num_sing_stat_p_tp_npast_tense_pres", "__", "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$2", "__", "S_num_sing_stat_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres", "symbols": ["S_num_sing_stat_p_tp_npast_tense_pres", "__", "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$3", "__", "S_num_sing_stat_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_pres", "symbols": ["S_num_sing_stat_p_tp_npast_tense_pres", "__", "S_num_sing_stat_p_tp_npast_tense_pres$subexpression$4", "__", "S_num_sing_stat_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_past$subexpression$1", "__", "S_num_sing_stat_p_tp_ppast_tense_past", "__", "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$2", "__", "S_num_sing_stat_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_past", "__", "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$3", "__", "S_num_sing_stat_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_past", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_past", "__", "S_num_sing_stat_p_tp_ppast_tense_past$subexpression$4", "__", "S_num_sing_stat_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past", "symbols": ["S_num_sing_stat_p_tp_npast_tense_past$subexpression$1", "__", "S_num_sing_stat_p_tp_npast_tense_past", "__", "S_num_sing_stat_p_tp_npast_tense_past$subexpression$2", "__", "S_num_sing_stat_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past", "symbols": ["S_num_sing_stat_p_tp_npast_tense_past", "__", "S_num_sing_stat_p_tp_npast_tense_past$subexpression$3", "__", "S_num_sing_stat_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_past", "symbols": ["S_num_sing_stat_p_tp_npast_tense_past", "__", "S_num_sing_stat_p_tp_npast_tense_past$subexpression$4", "__", "S_num_sing_stat_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$1", "__", "S_num_sing_stat_p_tp_ppast_tense_fut", "__", "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$2", "__", "S_num_sing_stat_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_fut", "__", "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$3", "__", "S_num_sing_stat_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_ppast_tense_fut", "symbols": ["S_num_sing_stat_p_tp_ppast_tense_fut", "__", "S_num_sing_stat_p_tp_ppast_tense_fut$subexpression$4", "__", "S_num_sing_stat_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut", "symbols": ["S_num_sing_stat_p_tp_npast_tense_fut$subexpression$1", "__", "S_num_sing_stat_p_tp_npast_tense_fut", "__", "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$2", "__", "S_num_sing_stat_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut", "symbols": ["S_num_sing_stat_p_tp_npast_tense_fut", "__", "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$3", "__", "S_num_sing_stat_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_p_tp_npast_tense_fut", "symbols": ["S_num_sing_stat_p_tp_npast_tense_fut", "__", "S_num_sing_stat_p_tp_npast_tense_fut$subexpression$4", "__", "S_num_sing_stat_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$1", "__", "S_num_sing_stat_n_tp_ppast_tense_pres", "__", "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$2", "__", "S_num_sing_stat_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_pres", "__", "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$3", "__", "S_num_sing_stat_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_pres", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_pres", "__", "S_num_sing_stat_n_tp_ppast_tense_pres$subexpression$4", "__", "S_num_sing_stat_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres", "symbols": ["S_num_sing_stat_n_tp_npast_tense_pres$subexpression$1", "__", "S_num_sing_stat_n_tp_npast_tense_pres", "__", "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$2", "__", "S_num_sing_stat_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres", "symbols": ["S_num_sing_stat_n_tp_npast_tense_pres", "__", "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$3", "__", "S_num_sing_stat_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_pres", "symbols": ["S_num_sing_stat_n_tp_npast_tense_pres", "__", "S_num_sing_stat_n_tp_npast_tense_pres$subexpression$4", "__", "S_num_sing_stat_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_past$subexpression$1", "__", "S_num_sing_stat_n_tp_ppast_tense_past", "__", "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$2", "__", "S_num_sing_stat_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_past", "__", "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$3", "__", "S_num_sing_stat_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_past", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_past", "__", "S_num_sing_stat_n_tp_ppast_tense_past$subexpression$4", "__", "S_num_sing_stat_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past", "symbols": ["S_num_sing_stat_n_tp_npast_tense_past$subexpression$1", "__", "S_num_sing_stat_n_tp_npast_tense_past", "__", "S_num_sing_stat_n_tp_npast_tense_past$subexpression$2", "__", "S_num_sing_stat_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past", "symbols": ["S_num_sing_stat_n_tp_npast_tense_past", "__", "S_num_sing_stat_n_tp_npast_tense_past$subexpression$3", "__", "S_num_sing_stat_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_past", "symbols": ["S_num_sing_stat_n_tp_npast_tense_past", "__", "S_num_sing_stat_n_tp_npast_tense_past$subexpression$4", "__", "S_num_sing_stat_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$1", "__", "S_num_sing_stat_n_tp_ppast_tense_fut", "__", "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$2", "__", "S_num_sing_stat_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_fut", "__", "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$3", "__", "S_num_sing_stat_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_ppast_tense_fut", "symbols": ["S_num_sing_stat_n_tp_ppast_tense_fut", "__", "S_num_sing_stat_n_tp_ppast_tense_fut$subexpression$4", "__", "S_num_sing_stat_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut", "symbols": ["S_num_sing_stat_n_tp_npast_tense_fut$subexpression$1", "__", "S_num_sing_stat_n_tp_npast_tense_fut", "__", "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$2", "__", "S_num_sing_stat_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut", "symbols": ["S_num_sing_stat_n_tp_npast_tense_fut", "__", "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$3", "__", "S_num_sing_stat_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_sing_stat_n_tp_npast_tense_fut", "symbols": ["S_num_sing_stat_n_tp_npast_tense_fut", "__", "S_num_sing_stat_n_tp_npast_tense_fut$subexpression$4", "__", "S_num_sing_stat_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$1", "__", "S_num_plur_stat_p_tp_ppast_tense_pres", "__", "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$2", "__", "S_num_plur_stat_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_pres", "__", "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$3", "__", "S_num_plur_stat_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_pres", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_pres", "__", "S_num_plur_stat_p_tp_ppast_tense_pres$subexpression$4", "__", "S_num_plur_stat_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres", "symbols": ["S_num_plur_stat_p_tp_npast_tense_pres$subexpression$1", "__", "S_num_plur_stat_p_tp_npast_tense_pres", "__", "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$2", "__", "S_num_plur_stat_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres", "symbols": ["S_num_plur_stat_p_tp_npast_tense_pres", "__", "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$3", "__", "S_num_plur_stat_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_pres", "symbols": ["S_num_plur_stat_p_tp_npast_tense_pres", "__", "S_num_plur_stat_p_tp_npast_tense_pres$subexpression$4", "__", "S_num_plur_stat_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_past$subexpression$1", "__", "S_num_plur_stat_p_tp_ppast_tense_past", "__", "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$2", "__", "S_num_plur_stat_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_past", "__", "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$3", "__", "S_num_plur_stat_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_past", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_past", "__", "S_num_plur_stat_p_tp_ppast_tense_past$subexpression$4", "__", "S_num_plur_stat_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past", "symbols": ["S_num_plur_stat_p_tp_npast_tense_past$subexpression$1", "__", "S_num_plur_stat_p_tp_npast_tense_past", "__", "S_num_plur_stat_p_tp_npast_tense_past$subexpression$2", "__", "S_num_plur_stat_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past", "symbols": ["S_num_plur_stat_p_tp_npast_tense_past", "__", "S_num_plur_stat_p_tp_npast_tense_past$subexpression$3", "__", "S_num_plur_stat_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_past", "symbols": ["S_num_plur_stat_p_tp_npast_tense_past", "__", "S_num_plur_stat_p_tp_npast_tense_past$subexpression$4", "__", "S_num_plur_stat_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$1", "__", "S_num_plur_stat_p_tp_ppast_tense_fut", "__", "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$2", "__", "S_num_plur_stat_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_fut", "__", "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$3", "__", "S_num_plur_stat_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_ppast_tense_fut", "symbols": ["S_num_plur_stat_p_tp_ppast_tense_fut", "__", "S_num_plur_stat_p_tp_ppast_tense_fut$subexpression$4", "__", "S_num_plur_stat_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut", "symbols": ["S_num_plur_stat_p_tp_npast_tense_fut$subexpression$1", "__", "S_num_plur_stat_p_tp_npast_tense_fut", "__", "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$2", "__", "S_num_plur_stat_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut", "symbols": ["S_num_plur_stat_p_tp_npast_tense_fut", "__", "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$3", "__", "S_num_plur_stat_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_p_tp_npast_tense_fut", "symbols": ["S_num_plur_stat_p_tp_npast_tense_fut", "__", "S_num_plur_stat_p_tp_npast_tense_fut$subexpression$4", "__", "S_num_plur_stat_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$1", "__", "S_num_plur_stat_n_tp_ppast_tense_pres", "__", "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$2", "__", "S_num_plur_stat_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_pres", "__", "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$3", "__", "S_num_plur_stat_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_pres", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_pres", "__", "S_num_plur_stat_n_tp_ppast_tense_pres$subexpression$4", "__", "S_num_plur_stat_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres", "symbols": ["S_num_plur_stat_n_tp_npast_tense_pres$subexpression$1", "__", "S_num_plur_stat_n_tp_npast_tense_pres", "__", "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$2", "__", "S_num_plur_stat_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres", "symbols": ["S_num_plur_stat_n_tp_npast_tense_pres", "__", "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$3", "__", "S_num_plur_stat_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_pres", "symbols": ["S_num_plur_stat_n_tp_npast_tense_pres", "__", "S_num_plur_stat_n_tp_npast_tense_pres$subexpression$4", "__", "S_num_plur_stat_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_past$subexpression$1", "__", "S_num_plur_stat_n_tp_ppast_tense_past", "__", "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$2", "__", "S_num_plur_stat_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_past", "__", "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$3", "__", "S_num_plur_stat_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_past", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_past", "__", "S_num_plur_stat_n_tp_ppast_tense_past$subexpression$4", "__", "S_num_plur_stat_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past", "symbols": ["S_num_plur_stat_n_tp_npast_tense_past$subexpression$1", "__", "S_num_plur_stat_n_tp_npast_tense_past", "__", "S_num_plur_stat_n_tp_npast_tense_past$subexpression$2", "__", "S_num_plur_stat_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past", "symbols": ["S_num_plur_stat_n_tp_npast_tense_past", "__", "S_num_plur_stat_n_tp_npast_tense_past$subexpression$3", "__", "S_num_plur_stat_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_past", "symbols": ["S_num_plur_stat_n_tp_npast_tense_past", "__", "S_num_plur_stat_n_tp_npast_tense_past$subexpression$4", "__", "S_num_plur_stat_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$1", "__", "S_num_plur_stat_n_tp_ppast_tense_fut", "__", "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$2", "__", "S_num_plur_stat_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_fut", "__", "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$3", "__", "S_num_plur_stat_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_ppast_tense_fut", "symbols": ["S_num_plur_stat_n_tp_ppast_tense_fut", "__", "S_num_plur_stat_n_tp_ppast_tense_fut$subexpression$4", "__", "S_num_plur_stat_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[iI]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut", "symbols": ["S_num_plur_stat_n_tp_npast_tense_fut$subexpression$1", "__", "S_num_plur_stat_n_tp_npast_tense_fut", "__", "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$2", "__", "S_num_plur_stat_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$3", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut", "symbols": ["S_num_plur_stat_n_tp_npast_tense_fut", "__", "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$3", "__", "S_num_plur_stat_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "S_num_plur_stat_n_tp_npast_tense_fut", "symbols": ["S_num_plur_stat_n_tp_npast_tense_fut", "__", "S_num_plur_stat_n_tp_npast_tense_fut$subexpression$4", "__", "S_num_plur_stat_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "WS_gap_n", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_sing_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_n", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"sing","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "WS_gap_n", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_sing_case_pnom_gap_sing", "WS_gap_sing", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_plur", "WS_gap_plur", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "S_num_plur_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["NP__num_plur_case_pnom_gap_n", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("S", {"num":"plur","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past", "__", "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past", "__", "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past", "__", "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past", "__", "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past", "__", "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past", "__", "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past", "__", "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past", "__", "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past", "__", "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past", "__", "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past", "__", "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past", "__", "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP__num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP'", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_pres$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_past$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_past$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_sing_tp_npast_tense_fut$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_pres$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_past$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_past$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_plur_tp_npast_tense_fut$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_sing", "NP__num_sing_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_sing"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"sing","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "WS_gap_plur", "NP__num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_plur"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"plur","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$3", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$4", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_n_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_sing_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_sing_fin_part_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"sing","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_pres$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_pres$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_past$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_past$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_ppast_tense_fut$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$3", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$3", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$4", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_p_gap_n_tp_npast_tense_fut$subexpression$4", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_p_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"+","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_n_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_n_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"-","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_p_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"+","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_pres", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "symbols": ["VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_past", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "symbols": ["VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_ppast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "__", "NP__num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[nN]/, /[oO]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$1", "__", "ADJ"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["BE_num_plur_fin_part_tp_npast_tense_fut", "__", "PP"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "symbols": ["VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut$subexpression$2", "__", "VP_num_plur_fin_part_stat_n_gap_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("VP", {"num":"plur","fin":"part","stat":"-","gap":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "NP_num_sing_case_pnom_gap_sing", "symbols": ["GAP"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"sing"}, args, loc)},
    {"name": "NP_num_sing_case_nnom_gap_sing", "symbols": ["GAP"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"sing"}, args, loc)},
    {"name": "NP_num_plur_case_pnom_gap_plur", "symbols": ["GAP"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"plur"}, args, loc)},
    {"name": "NP_num_plur_case_nnom_gap_plur", "symbols": ["GAP"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"plur"}, args, loc)},
    {"name": "NP_num_sing_case_pnom_gap_n", "symbols": ["DET_num_sing", "__", "N_num_sing"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_pnom_gap_n", "symbols": ["PN_num_sing"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_pnom_gap_n", "symbols": ["PRO_num_sing_case_pnom_refl_p"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_pnom_gap_n", "symbols": ["PRO_num_sing_case_pnom_refl_n"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_pnom_gap_n", "symbols": ["DET_num_sing_rn_p", "__", "RN_num_sing"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_nnom_gap_n", "symbols": ["DET_num_sing", "__", "N_num_sing"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_nnom_gap_n", "symbols": ["PN_num_sing"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_nnom_gap_n", "symbols": ["PRO_num_sing_case_nnom_refl_p"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_nnom_gap_n", "symbols": ["PRO_num_sing_case_nnom_refl_n"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_sing_case_nnom_gap_n", "symbols": ["DET_num_sing_rn_p", "__", "RN_num_sing"], "postprocess": (args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_pnom_gap_n", "symbols": ["DET_num_plur", "__", "N_num_plur"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_pnom_gap_n", "symbols": ["PN_num_plur"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_pnom_gap_n", "symbols": ["PRO_num_plur_case_pnom_refl_p"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_pnom_gap_n", "symbols": ["PRO_num_plur_case_pnom_refl_n"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_pnom_gap_n", "symbols": ["DET_num_sing_rn_p", "__", "RN_num_plur"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_nnom_gap_n", "symbols": ["DET_num_plur", "__", "N_num_plur"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_nnom_gap_n", "symbols": ["PN_num_plur"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_nnom_gap_n", "symbols": ["PRO_num_plur_case_nnom_refl_p"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_nnom_gap_n", "symbols": ["PRO_num_plur_case_nnom_refl_n"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP_num_plur_case_nnom_gap_n", "symbols": ["DET_num_sing_rn_p", "__", "RN_num_plur"], "postprocess": (args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc)},
    {"name": "NP__num_plur_case_pnom_gap_n$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_pnom_gap_n", "symbols": ["NP_num_sing_case_pnom_gap_n", "__", "NP__num_plur_case_pnom_gap_n$subexpression$1", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_n$subexpression$2", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_pnom_gap_n", "symbols": ["NP_num_sing_case_pnom_gap_n", "__", "NP__num_plur_case_pnom_gap_n$subexpression$2", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_n$subexpression$3", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_pnom_gap_n", "symbols": ["NP_num_plur_case_pnom_gap_n", "__", "NP__num_plur_case_pnom_gap_n$subexpression$3", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_n$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_pnom_gap_n", "symbols": ["NP_num_plur_case_pnom_gap_n", "__", "NP__num_plur_case_pnom_gap_n$subexpression$4", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_n", "symbols": ["NP_num_plur_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_n$subexpression$5", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_pnom_gap_n", "symbols": ["NP_num_plur_case_pnom_gap_n", "__", "NP__num_plur_case_pnom_gap_n$subexpression$5", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_n$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_nnom_gap_n", "symbols": ["NP_num_sing_case_nnom_gap_n", "__", "NP__num_plur_case_nnom_gap_n$subexpression$1", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_n$subexpression$2", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_nnom_gap_n", "symbols": ["NP_num_sing_case_nnom_gap_n", "__", "NP__num_plur_case_nnom_gap_n$subexpression$2", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_n$subexpression$3", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_nnom_gap_n", "symbols": ["NP_num_plur_case_nnom_gap_n", "__", "NP__num_plur_case_nnom_gap_n$subexpression$3", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_n$subexpression$4", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_nnom_gap_n", "symbols": ["NP_num_plur_case_nnom_gap_n", "__", "NP__num_plur_case_nnom_gap_n$subexpression$4", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_n", "symbols": ["NP_num_plur_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_n$subexpression$5", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_plur_case_nnom_gap_n", "symbols": ["NP_num_plur_case_nnom_gap_n", "__", "NP__num_plur_case_nnom_gap_n$subexpression$5", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_sing_case_pnom_gap_n", "symbols": ["NP_num_sing_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_sing_case_pnom_gap_n$subexpression$1", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_sing_case_pnom_gap_n", "symbols": ["NP_num_sing_case_pnom_gap_n", "__", "NP__num_sing_case_pnom_gap_n$subexpression$1", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_sing_case_pnom_gap_sing", "symbols": ["NP_num_sing_case_pnom_gap_sing"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"sing"}, args, loc))(args)},
    {"name": "NP__num_sing_case_pnom_gap_plur", "symbols": ["NP_num_sing_case_pnom_gap_plur"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"+nom","gap":"plur"}, args, loc))(args)},
    {"name": "NP__num_sing_case_nnom_gap_n", "symbols": ["NP_num_sing_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_sing_case_nnom_gap_n$subexpression$1", "symbols": [/[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "NP__num_sing_case_nnom_gap_n", "symbols": ["NP_num_sing_case_nnom_gap_n", "__", "NP__num_sing_case_nnom_gap_n$subexpression$1", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"-"}, args, loc))(args)},
    {"name": "NP__num_sing_case_nnom_gap_sing", "symbols": ["NP_num_sing_case_nnom_gap_sing"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"sing"}, args, loc))(args)},
    {"name": "NP__num_sing_case_nnom_gap_plur", "symbols": ["NP_num_sing_case_nnom_gap_plur"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"sing","case":"-nom","gap":"plur"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_sing", "symbols": ["NP_num_plur_case_pnom_gap_sing"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"sing"}, args, loc))(args)},
    {"name": "NP__num_plur_case_pnom_gap_plur", "symbols": ["NP_num_plur_case_pnom_gap_plur"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"+nom","gap":"plur"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_sing", "symbols": ["NP_num_plur_case_nnom_gap_sing"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"sing"}, args, loc))(args)},
    {"name": "NP__num_plur_case_nnom_gap_plur", "symbols": ["NP_num_plur_case_nnom_gap_plur"], "postprocess": (args) => args.length == 1 ? args[0] : ((args, loc) => node("NP", {"num":"plur","case":"-nom","gap":"plur"}, args, loc))(args)},
    {"name": "N_num_sing", "symbols": ["N_num_sing", "__", "RC_num_sing"], "postprocess": (args, loc) => node("N", {"num":"sing"}, args, loc)},
    {"name": "N_num_sing", "symbols": ["ADJ", "__", "N_num_sing"], "postprocess": (args, loc) => node("N", {"num":"sing"}, args, loc)},
    {"name": "N_num_sing", "symbols": ["N_num_sing", "__", "PP"], "postprocess": (args, loc) => node("N", {"num":"sing"}, args, loc)},
    {"name": "N_num_sing$subexpression$1", "symbols": [/[sS]/, /[tT]/, /[oO]/, /[cC]/, /[kK]/, /[bB]/, /[rR]/, /[oO]/, /[kK]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$1"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "N_num_sing$subexpression$2", "symbols": [/[mM]/, /[aA]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$2"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "N_num_sing$subexpression$3", "symbols": [/[eE]/, /[nN]/, /[gG]/, /[iI]/, /[nN]/, /[eE]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$3"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "N_num_sing$subexpression$4", "symbols": [/[bB]/, /[rR]/, /[aA]/, /[zZ]/, /[iI]/, /[lL]/, /[iI]/, /[aA]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$4"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "N_num_sing$subexpression$5", "symbols": [/[sS]/, /[tT]/, /[oO]/, /[cC]/, /[kK]/, /[bB]/, /[rR]/, /[oO]/, /[kK]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$5"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "N_num_sing$subexpression$6", "symbols": [/[wW]/, /[oO]/, /[mM]/, /[aA]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$6"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "N_num_sing$subexpression$7", "symbols": [/[wW]/, /[iI]/, /[dD]/, /[oO]/, /[wW]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$7"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "N_num_sing$subexpression$8", "symbols": [/[eE]/, /[nN]/, /[gG]/, /[iI]/, /[nN]/, /[eE]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$8"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "N_num_sing$subexpression$9", "symbols": [/[bB]/, /[rR]/, /[aA]/, /[zZ]/, /[iI]/, /[lL]/, /[iI]/, /[aA]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$9"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "N_num_sing$subexpression$10", "symbols": [/[bB]/, /[oO]/, /[oO]/, /[kK]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$10"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"-hum"}, args, loc)},
    {"name": "N_num_sing$subexpression$11", "symbols": [/[dD]/, /[oO]/, /[nN]/, /[kK]/, /[eE]/, /[yY]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$11"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"-hum"}, args, loc)},
    {"name": "N_num_sing$subexpression$12", "symbols": [/[hH]/, /[oO]/, /[rR]/, /[sS]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$12"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"-hum"}, args, loc)},
    {"name": "N_num_sing$subexpression$13", "symbols": [/[pP]/, /[oO]/, /[rR]/, /[sS]/, /[cC]/, /[hH]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "N_num_sing", "symbols": ["N_num_sing$subexpression$13"], "postprocess": (args, loc) => node("N", {"num":"sing","gen":"-hum"}, args, loc)},
    {"name": "N_num_plur", "symbols": ["N_num_plur", "__", "RC_num_plur"], "postprocess": (args, loc) => node("N", {"num":"plur"}, args, loc)},
    {"name": "N_num_plur", "symbols": ["ADJ", "__", "N_num_plur"], "postprocess": (args, loc) => node("N", {"num":"plur"}, args, loc)},
    {"name": "N_num_plur", "symbols": ["N_num_plur", "__", "PP"], "postprocess": (args, loc) => node("N", {"num":"plur"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_p_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_p_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_p_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_p_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_p_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_p_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_n_gap_sing_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_n_gap_sing_tp_npast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_n_gap_sing_tp_ppast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_n_gap_sing_tp_npast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_n_gap_sing_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_sing", "symbols": ["RPRO_num_sing", "__", "S_num_sing_stat_n_gap_sing_tp_npast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"sing"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_p_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_p_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_p_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_p_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_p_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_p_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_n_gap_plur_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_n_gap_plur_tp_npast_tense_pres"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_n_gap_plur_tp_ppast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_n_gap_plur_tp_npast_tense_past"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_n_gap_plur_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "RC_num_plur", "symbols": ["RPRO_num_plur", "__", "S_num_plur_stat_n_gap_plur_tp_npast_tense_fut"], "postprocess": (args, loc) => node("RC", {"num":"plur"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_pres", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_past", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_fut", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_fut", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"+","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_pres", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_past", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_fut", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_fut", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_p_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"+","stat":"-","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_trans_p_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_trans_p_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_trans_p_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_trans_p_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_trans_n_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_trans_n_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_past", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_past", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_fut", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_fut", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"+","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_trans_n_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_trans_n_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_past", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_past", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_fut", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_fut", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"-","stat":"-","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"+","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"sing","fin":"part","stat":"-","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_sing_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_pres", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_past", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_fut", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_fut", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"+","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_pres", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_sing_fin_n_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_past", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_fut", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_fut", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_p_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"+","stat":"-","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_trans_p_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_trans_p_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_trans_p_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_trans_p_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_trans_n_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_trans_n_stat_p"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_past", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_past", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_fut", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_fut", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"+","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_trans_n_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_trans_n_stat_n"], "postprocess": ([child], loc) => child},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_past", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_past", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_fut", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_fut", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_n_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"-","stat":"-","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_p_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_p_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"+","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_p_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_p_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_p_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_n_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"+","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_p_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_p_trans_n_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"-","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"-","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_pres$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"-","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"-","tp":"-past","tense":"past"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_past$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"-","tp":"+past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_n_tp_ppast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "symbols": [/[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$1", "__", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut"], "postprocess": (args, loc) => node("V", {"num":"plur","fin":"part","stat":"-","trans":"-","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$2", "symbols": [/[eE]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut", "symbols": ["V_num_plur_fin_n_stat_n_trans_n_tp_ppast_tense_pres", "V_num_plur_fin_part_stat_n_trans_n_tp_npast_tense_fut$subexpression$2"], "postprocess": ([inf, s], loc) => node(inf['@type'], inf.types, [inf.children[0] + s], loc)},
    {"name": "DET_num_sing_rn_p$subexpression$1", "symbols": [{"literal":"'"}, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing_rn_p", "symbols": ["PN_num_sing", "DET_num_sing_rn_p$subexpression$1"], "postprocess": (args, loc) => node("DET", {"num":"sing","rn":"+"}, args, loc)},
    {"name": "DET_num_sing_rn_p$subexpression$2", "symbols": [{"literal":"'"}, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing_rn_p", "symbols": ["PN_num_plur", "DET_num_sing_rn_p$subexpression$2"], "postprocess": (args, loc) => node("DET", {"num":"sing","rn":"+"}, args, loc)},
    {"name": "PP", "symbols": ["PREP", "__", "NP_num_sing_case_pnom_gap_n"], "postprocess": (args, loc) => node("PP", {}, args, loc)},
    {"name": "PP", "symbols": ["PREP", "__", "NP_num_sing_case_nnom_gap_n"], "postprocess": (args, loc) => node("PP", {}, args, loc)},
    {"name": "PP", "symbols": ["PREP", "__", "NP_num_plur_case_pnom_gap_n"], "postprocess": (args, loc) => node("PP", {}, args, loc)},
    {"name": "PP", "symbols": ["PREP", "__", "NP_num_plur_case_nnom_gap_n"], "postprocess": (args, loc) => node("PP", {}, args, loc)},
    {"name": "DET_num_sing$subexpression$1", "symbols": [/[aA]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$subexpression$1"], "postprocess": (args, loc) => node("DET", {"num":"sing"}, args, loc)},
    {"name": "DET_num_sing$subexpression$2", "symbols": [/[aA]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$subexpression$2"], "postprocess": (args, loc) => node("DET", {"num":"sing"}, args, loc)},
    {"name": "DET_num_sing$subexpression$3", "symbols": [/[eE]/, /[vV]/, /[eE]/, /[rR]/, /[yY]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$subexpression$3"], "postprocess": (args, loc) => node("DET", {"num":"sing"}, args, loc)},
    {"name": "DET_num_sing$subexpression$4", "symbols": [/[tT]/, /[hH]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$subexpression$4"], "postprocess": (args, loc) => node("DET", {"num":"sing"}, args, loc)},
    {"name": "DET_num_sing$subexpression$5", "symbols": [/[sS]/, /[oO]/, /[mM]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$subexpression$5"], "postprocess": (args, loc) => node("DET", {"num":"sing"}, args, loc)},
    {"name": "PRO_num_sing_case_pnom_refl_n$subexpression$1", "symbols": [/[hH]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_pnom_refl_n", "symbols": ["PRO_num_sing_case_pnom_refl_n$subexpression$1"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"+nom","refl":"-","gen":"male"}, args, loc)},
    {"name": "PRO_num_sing_case_pnom_refl_n$subexpression$2", "symbols": [/[sS]/, /[hH]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_pnom_refl_n", "symbols": ["PRO_num_sing_case_pnom_refl_n$subexpression$2"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"+nom","refl":"-","gen":"fem"}, args, loc)},
    {"name": "PRO_num_sing_case_pnom_refl_n$subexpression$3", "symbols": [/[iI]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_pnom_refl_n", "symbols": ["PRO_num_sing_case_pnom_refl_n$subexpression$3"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"+nom","refl":"-","gen":"-hum"}, args, loc)},
    {"name": "PRO_num_sing_case_nnom_refl_n$subexpression$1", "symbols": [/[hH]/, /[iI]/, /[mM]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_nnom_refl_n", "symbols": ["PRO_num_sing_case_nnom_refl_n$subexpression$1"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"-nom","refl":"-","gen":"male"}, args, loc)},
    {"name": "PRO_num_sing_case_nnom_refl_n$subexpression$2", "symbols": [/[hH]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_nnom_refl_n", "symbols": ["PRO_num_sing_case_nnom_refl_n$subexpression$2"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"-nom","refl":"-","gen":"fem"}, args, loc)},
    {"name": "PRO_num_sing_case_nnom_refl_n$subexpression$3", "symbols": [/[iI]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_nnom_refl_n", "symbols": ["PRO_num_sing_case_nnom_refl_n$subexpression$3"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"-nom","refl":"-","gen":"-hum"}, args, loc)},
    {"name": "PRO_num_plur_case_pnom_refl_n$subexpression$1", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[yY]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_plur_case_pnom_refl_n", "symbols": ["PRO_num_plur_case_pnom_refl_n$subexpression$1"], "postprocess": (args, loc) => node("PRO", {"num":"plur","case":"+nom","refl":"-","gen":["male","fem","-hum"]}, args, loc)},
    {"name": "PRO_num_plur_case_nnom_refl_n$subexpression$1", "symbols": [/[tT]/, /[hH]/, /[eE]/, /[mM]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_plur_case_nnom_refl_n", "symbols": ["PRO_num_plur_case_nnom_refl_n$subexpression$1"], "postprocess": (args, loc) => node("PRO", {"num":"plur","case":"-nom","refl":"-","gen":["male","fem","-hum"]}, args, loc)},
    {"name": "AUX_num_sing_fin_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[dD]/, /[oO]/, /[eE]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_sing_fin_p_tp_npast_tense_pres", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"sing","fin":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "AUX_num_plur_fin_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[dD]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_plur_fin_p_tp_npast_tense_pres", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"plur","fin":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "AUX_num_sing_fin_p_tp_npast_tense_past$subexpression$1", "symbols": [/[dD]/, /[iI]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_sing_fin_p_tp_npast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"sing","fin":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "AUX_num_plur_fin_p_tp_npast_tense_past$subexpression$1", "symbols": [/[dD]/, /[iI]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_plur_fin_p_tp_npast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"plur","fin":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "AUX_num_sing_fin_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[dD]/, /[iI]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_sing_fin_p_tp_ppast_tense_past", "symbols": ["AUX_num_sing_fin_p_tp_ppast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"sing","fin":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "AUX_num_plur_fin_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[dD]/, /[iI]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_plur_fin_p_tp_ppast_tense_past", "symbols": ["AUX_num_plur_fin_p_tp_ppast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"plur","fin":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$1", "symbols": [/[lL]/, /[iI]/, /[kK]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$1"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$2", "symbols": [/[lL]/, /[oO]/, /[vV]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$2"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$3", "symbols": [/[aA]/, /[dD]/, /[mM]/, /[iI]/, /[rR]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$3"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$4", "symbols": [/[kK]/, /[nN]/, /[oO]/, /[wW]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$4"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$5", "symbols": [/[oO]/, /[wW]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$5"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$6", "symbols": [/[fF]/, /[aA]/, /[sS]/, /[cC]/, /[iI]/, /[nN]/, /[aA]/, /[tT]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$6"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$7", "symbols": [/[rR]/, /[oO]/, /[tT]/, /[aA]/, /[tT]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$7"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_p$subexpression$8", "symbols": [/[sS]/, /[uU]/, /[rR]/, /[pP]/, /[rR]/, /[iI]/, /[sS]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_p", "symbols": ["V_trans_p_stat_p$subexpression$8"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"+"}, args, loc)},
    {"name": "V_trans_n_stat_p$subexpression$1", "symbols": [/[lL]/, /[oO]/, /[vV]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_p", "symbols": ["V_trans_n_stat_p$subexpression$1"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"+"}, args, loc)},
    {"name": "V_trans_n_stat_p$subexpression$2", "symbols": [/[sS]/, /[tT]/, /[iI]/, /[nN]/, /[kK]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_p", "symbols": ["V_trans_n_stat_p$subexpression$2"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"+"}, args, loc)},
    {"name": "V_trans_n_stat_p$subexpression$3", "symbols": [/[aA]/, /[dD]/, /[oO]/, /[rR]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_p", "symbols": ["V_trans_n_stat_p$subexpression$3"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"+"}, args, loc)},
    {"name": "V_trans_p_stat_n$subexpression$1", "symbols": [/[lL]/, /[eE]/, /[aA]/, /[vV]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_n", "symbols": ["V_trans_p_stat_n$subexpression$1"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"-"}, args, loc)},
    {"name": "V_trans_p_stat_n$subexpression$2", "symbols": [/[rR]/, /[eE]/, /[aA]/, /[cC]/, /[hH]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_n", "symbols": ["V_trans_p_stat_n$subexpression$2"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"-"}, args, loc)},
    {"name": "V_trans_p_stat_n$subexpression$3", "symbols": [/[kK]/, /[iI]/, /[sS]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_n", "symbols": ["V_trans_p_stat_n$subexpression$3"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"-"}, args, loc)},
    {"name": "V_trans_p_stat_n$subexpression$4", "symbols": [/[hH]/, /[iI]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_n", "symbols": ["V_trans_p_stat_n$subexpression$4"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"-"}, args, loc)},
    {"name": "V_trans_p_stat_n$subexpression$5", "symbols": [/[sS]/, /[cC]/, /[oO]/, /[lL]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_n", "symbols": ["V_trans_p_stat_n$subexpression$5"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"-"}, args, loc)},
    {"name": "V_trans_p_stat_n$subexpression$6", "symbols": [/[bB]/, /[eE]/, /[aA]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_p_stat_n", "symbols": ["V_trans_p_stat_n$subexpression$6"], "postprocess": (args, loc) => node("V", {"trans":"+","stat":"-"}, args, loc)},
    {"name": "V_trans_n_stat_n$subexpression$1", "symbols": [/[lL]/, /[eE]/, /[aA]/, /[vV]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_n", "symbols": ["V_trans_n_stat_n$subexpression$1"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"-"}, args, loc)},
    {"name": "V_trans_n_stat_n$subexpression$2", "symbols": [/[aA]/, /[rR]/, /[rR]/, /[iI]/, /[vV]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_n", "symbols": ["V_trans_n_stat_n$subexpression$2"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"-"}, args, loc)},
    {"name": "V_trans_n_stat_n$subexpression$3", "symbols": [/[wW]/, /[aA]/, /[lL]/, /[kK]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_n", "symbols": ["V_trans_n_stat_n$subexpression$3"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"-"}, args, loc)},
    {"name": "V_trans_n_stat_n$subexpression$4", "symbols": [/[sS]/, /[lL]/, /[eE]/, /[eE]/, /[pP]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_n", "symbols": ["V_trans_n_stat_n$subexpression$4"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"-"}, args, loc)},
    {"name": "V_trans_n_stat_n$subexpression$5", "symbols": [/[cC]/, /[oO]/, /[mM]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_n", "symbols": ["V_trans_n_stat_n$subexpression$5"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"-"}, args, loc)},
    {"name": "V_trans_n_stat_n$subexpression$6", "symbols": [/[sS]/, /[hH]/, /[iI]/, /[nN]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "V_trans_n_stat_n", "symbols": ["V_trans_n_stat_n$subexpression$6"], "postprocess": (args, loc) => node("V", {"trans":"-","stat":"-"}, args, loc)},
    {"name": "RPRO_num_sing$subexpression$1", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RPRO_num_sing", "symbols": ["RPRO_num_sing$subexpression$1"], "postprocess": (args, loc) => node("RPRO", {"num":"sing"}, args, loc)},
    {"name": "RPRO_num_sing$subexpression$2", "symbols": [/[wW]/, /[hH]/, /[iI]/, /[cC]/, /[hH]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RPRO_num_sing", "symbols": ["RPRO_num_sing$subexpression$2"], "postprocess": (args, loc) => node("RPRO", {"num":"sing"}, args, loc)},
    {"name": "RPRO_num_plur$subexpression$1", "symbols": [/[wW]/, /[hH]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RPRO_num_plur", "symbols": ["RPRO_num_plur$subexpression$1"], "postprocess": (args, loc) => node("RPRO", {"num":"plur"}, args, loc)},
    {"name": "RPRO_num_plur$subexpression$2", "symbols": [/[wW]/, /[hH]/, /[iI]/, /[cC]/, /[hH]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RPRO_num_plur", "symbols": ["RPRO_num_plur$subexpression$2"], "postprocess": (args, loc) => node("RPRO", {"num":"plur"}, args, loc)},
    {"name": "PRO_num_sing_case_nnom_refl_p$subexpression$1", "symbols": [/[hH]/, /[iI]/, /[mM]/, /[sS]/, /[eE]/, /[lL]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_nnom_refl_p", "symbols": ["PRO_num_sing_case_nnom_refl_p$subexpression$1"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"-nom","refl":"+","gen":"male"}, args, loc)},
    {"name": "PRO_num_sing_case_nnom_refl_p$subexpression$2", "symbols": [/[hH]/, /[eE]/, /[rR]/, /[sS]/, /[eE]/, /[lL]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_nnom_refl_p", "symbols": ["PRO_num_sing_case_nnom_refl_p$subexpression$2"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"-nom","refl":"+","gen":"fem"}, args, loc)},
    {"name": "PRO_num_sing_case_nnom_refl_p$subexpression$3", "symbols": [/[iI]/, /[tT]/, /[sS]/, /[eE]/, /[lL]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PRO_num_sing_case_nnom_refl_p", "symbols": ["PRO_num_sing_case_nnom_refl_p$subexpression$3"], "postprocess": (args, loc) => node("PRO", {"num":"sing","case":"-nom","refl":"+","gen":"-hum"}, args, loc)},
    {"name": "GAP", "symbols": [], "postprocess": (args, loc) => node("GAP", {}, args, loc)},
    {"name": "ADJ$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[pP]/, /[pP]/, /[yY]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$1"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$2", "symbols": [/[uU]/, /[nN]/, /[hH]/, /[aA]/, /[pP]/, /[pP]/, /[yY]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$2"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$3", "symbols": [/[hH]/, /[aA]/, /[nN]/, /[dD]/, /[sS]/, /[oO]/, /[mM]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$3"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$4", "symbols": [/[bB]/, /[eE]/, /[aA]/, /[uU]/, /[tT]/, /[iI]/, /[fF]/, /[uU]/, /[lL]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$4"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$5", "symbols": [/[fF]/, /[aA]/, /[sS]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$5"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$6", "symbols": [/[sS]/, /[lL]/, /[oO]/, /[wW]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$6"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$7", "symbols": [/[mM]/, /[oO]/, /[rR]/, /[tT]/, /[aA]/, /[lL]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$7"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "ADJ$subexpression$8", "symbols": [/[bB]/, /[rR]/, /[aA]/, /[zZ]/, /[iI]/, /[lL]/, /[iI]/, /[aA]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "ADJ", "symbols": ["ADJ$subexpression$8"], "postprocess": (args, loc) => node("ADJ", {}, args, loc)},
    {"name": "BE_num_sing_fin_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[iI]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "BE_num_sing_fin_p_tp_npast_tense_pres", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("BE", {"num":"sing","fin":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "BE_num_plur_fin_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[aA]/, /[rR]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "BE_num_plur_fin_p_tp_npast_tense_pres", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("BE", {"num":"plur","fin":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "BE_num_sing_fin_p_tp_npast_tense_past$subexpression$1", "symbols": [/[wW]/, /[aA]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "BE_num_sing_fin_p_tp_npast_tense_past", "symbols": ["BE_num_sing_fin_p_tp_npast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("BE", {"num":"sing","fin":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "BE_num_plur_fin_p_tp_npast_tense_past$subexpression$1", "symbols": [/[wW]/, /[eE]/, /[rR]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "BE_num_plur_fin_p_tp_npast_tense_past", "symbols": ["BE_num_plur_fin_p_tp_npast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("BE", {"num":"plur","fin":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "RN_num_sing$subexpression$1", "symbols": [/[hH]/, /[uU]/, /[sS]/, /[bB]/, /[aA]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$1"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "RN_num_sing$subexpression$2", "symbols": [/[fF]/, /[aA]/, /[tT]/, /[hH]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$2"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "RN_num_sing$subexpression$3", "symbols": [/[bB]/, /[rR]/, /[oO]/, /[tT]/, /[hH]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$3"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":"male"}, args, loc)},
    {"name": "RN_num_sing$subexpression$4", "symbols": [/[wW]/, /[iI]/, /[fF]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$4"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "RN_num_sing$subexpression$5", "symbols": [/[mM]/, /[oO]/, /[tT]/, /[hH]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$5"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "RN_num_sing$subexpression$6", "symbols": [/[sS]/, /[iI]/, /[sS]/, /[tT]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$6"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":"fem"}, args, loc)},
    {"name": "RN_num_sing$subexpression$7", "symbols": [/[pP]/, /[aA]/, /[rR]/, /[eE]/, /[nN]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$7"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":["male","fem"]}, args, loc)},
    {"name": "RN_num_sing$subexpression$8", "symbols": [/[cC]/, /[hH]/, /[iI]/, /[lL]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$8"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":["male","fem"]}, args, loc)},
    {"name": "RN_num_sing$subexpression$9", "symbols": [/[sS]/, /[iI]/, /[bB]/, /[lL]/, /[iI]/, /[nN]/, /[gG]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "RN_num_sing", "symbols": ["RN_num_sing$subexpression$9"], "postprocess": (args, loc) => node("RN", {"num":"sing","gen":["male","fem"]}, args, loc)},
    {"name": "PREP$subexpression$1", "symbols": [/[bB]/, /[eE]/, /[hH]/, /[iI]/, /[nN]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$1"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$2", "symbols": [/[iI]/, /[nN]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$2"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$3", "symbols": [/[oO]/, /[vV]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$3"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$4", "symbols": [/[uU]/, /[nN]/, /[dD]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$4"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$5", "symbols": [/[nN]/, /[eE]/, /[aA]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$5"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$6", "symbols": [/[bB]/, /[eE]/, /[fF]/, /[oO]/, /[rR]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$6"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$7", "symbols": [/[aA]/, /[fF]/, /[tT]/, /[eE]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$7"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$8", "symbols": [/[dD]/, /[uU]/, /[rR]/, /[iI]/, /[nN]/, /[gG]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$8"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$9", "symbols": [/[fF]/, /[rR]/, /[oO]/, /[mM]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$9"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$10", "symbols": [/[tT]/, /[oO]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$10"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$11", "symbols": [/[oO]/, /[fF]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$11"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$12", "symbols": [/[aA]/, /[bB]/, /[oO]/, /[uU]/, /[tT]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$12"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$13", "symbols": [/[bB]/, /[yY]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$13"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$14", "symbols": [/[fF]/, /[oO]/, /[rR]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$14"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PREP$subexpression$15", "symbols": [/[wW]/, /[iI]/, /[tT]/, /[hH]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "PREP", "symbols": ["PREP$subexpression$15"], "postprocess": (args, loc) => node("PREP", {}, args, loc)},
    {"name": "PN_num_sing", "symbols": ["FULLNAME"], "postprocess": (args, loc) => node("PN", {"num":"sing","gen":"?"}, args, loc)},
    {"name": "PN_num_sing", "symbols": ["VAR"], "postprocess": (args, loc) => node("PN", {"num":"sing","gen":"?","var":true}, args, loc)},
    {"name": "AUX_num_sing_fin_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[wW]/, /[iI]/, /[lL]/, /[lL]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_sing_fin_p_tp_npast_tense_fut", "symbols": ["AUX_num_sing_fin_p_tp_npast_tense_fut$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"sing","fin":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "AUX_num_plur_fin_p_tp_npast_tense_fut$subexpression$1", "symbols": [/[wW]/, /[iI]/, /[lL]/, /[lL]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "AUX_num_plur_fin_p_tp_npast_tense_fut", "symbols": ["AUX_num_plur_fin_p_tp_npast_tense_fut$subexpression$1"], "postprocess": (args, loc) => node("AUX", {"num":"plur","fin":"+","tp":"-past","tense":"fut"}, args, loc)},
    {"name": "HAVE_num_sing_fin_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[sS]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_sing_fin_p_tp_npast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"sing","fin":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "HAVE_num_plur_fin_p_tp_npast_tense_pres$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[vV]/, /[eE]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_plur_fin_p_tp_npast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"plur","fin":"+","tp":"-past","tense":"pres"}, args, loc)},
    {"name": "HAVE_num_sing_fin_p_tp_npast_tense_past$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_sing_fin_p_tp_npast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_npast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"sing","fin":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "HAVE_num_plur_fin_p_tp_npast_tense_past$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_plur_fin_p_tp_npast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_npast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"plur","fin":"+","tp":"-past","tense":"past"}, args, loc)},
    {"name": "HAVE_num_sing_fin_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_sing_fin_p_tp_ppast_tense_pres", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"sing","fin":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "HAVE_num_sing_fin_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_sing_fin_p_tp_ppast_tense_past", "symbols": ["HAVE_num_sing_fin_p_tp_ppast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"sing","fin":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "HAVE_num_plur_fin_p_tp_ppast_tense_pres$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_plur_fin_p_tp_ppast_tense_pres", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_pres$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"plur","fin":"+","tp":"+past","tense":"pres"}, args, loc)},
    {"name": "HAVE_num_plur_fin_p_tp_ppast_tense_past$subexpression$1", "symbols": [/[hH]/, /[aA]/, /[dD]/], "postprocess": function(d) {return d.join(""); }},
    {"name": "HAVE_num_plur_fin_p_tp_ppast_tense_past", "symbols": ["HAVE_num_plur_fin_p_tp_ppast_tense_past$subexpression$1"], "postprocess": (args, loc) => node("HAVE", {"num":"plur","fin":"+","tp":"+past","tense":"past"}, args, loc)},
    {"name": "WS_gap_sing", "symbols": ["_"], "postprocess": () => null},
    {"name": "WS_gap_plur", "symbols": ["_"], "postprocess": () => null},
    {"name": "WS_gap_n", "symbols": ["__"], "postprocess": () => null}
]
  , ParserStart: "Sentence"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
