// Generated automatically by nearley, version 2.13.0
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }

function node(type, types, children) {
  // console.log(type + ": " + JSON.stringify(types) + " => ");
  return {
    "@type": type, 
    "types": types, 
     "children": children
       .filter(child => child)
       .filter(child => child != '.')
  }; 
}
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["_$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["__$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "S", "symbols": ["S_num_sing", "_", {"literal":"."}], "postprocess": (args) => node("S", {}, args)},
    {"name": "S", "symbols": ["S_num_plur", "_", {"literal":"."}], "postprocess": (args) => node("S", {}, args)},
    {"name": "S_num_sing", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing"}, args)},
    {"name": "S_num_sing", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing"}, args)},
    {"name": "S_num_sing", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing"}, args)},
    {"name": "S_num_plur", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur"}, args)},
    {"name": "S_num_plur", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur"}, args)},
    {"name": "S_num_plur", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur"}, args)},
    {"name": "S_num_sing_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"-"}, args)},
    {"name": "S_num_sing_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"-"}, args)},
    {"name": "S_num_sing_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"-"}, args)},
    {"name": "S_num_sing_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"-"}, args)},
    {"name": "S_num_sing_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"-"}, args)},
    {"name": "S_num_sing_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"-"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_sing", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_sing", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_sing", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_sing", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_sing", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_sing", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_sing"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_sing"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_sing", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_sing"], "postprocess": (args) => node("S", {"num":"sing","gap":"sing"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_plur", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_plur", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_plur", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_plur", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_plur", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_plur", "_", "VP__num_sing_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_plur"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_plur"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_sing_gap_plur", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "VP__num_sing_fin_p_gap_plur"], "postprocess": (args) => node("S", {"num":"sing","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"-"}, args)},
    {"name": "S_num_plur_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"-"}, args)},
    {"name": "S_num_plur_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"-"}, args)},
    {"name": "S_num_plur_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"-"}, args)},
    {"name": "S_num_plur_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"-"}, args)},
    {"name": "S_num_plur_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"-"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_sing", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_sing", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_sing", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_sing", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_sing", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_sing", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_sing"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_sing"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_sing", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_sing"], "postprocess": (args) => node("S", {"num":"plur","gap":"sing"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_plur", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_plur", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_plur", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_plur", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_plur", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_plur", "_", "VP__num_plur_fin_p_gap_n"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_plur"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_plur"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "S_num_plur_gap_plur", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "VP__num_plur_fin_p_gap_plur"], "postprocess": (args) => node("S", {"num":"plur","gap":"plur"}, args)},
    {"name": "VP__num_sing_fin_p_gap_n$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "VP__num_sing_fin_p_gap_n", "symbols": ["AUX_num_sing_fin_p", "_", "VP__num_sing_fin_p_gap_n$string$1", "_", "VP_num_sing_fin_n_gap_n"], "postprocess": (args) => node("VP'", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP__num_sing_fin_p_gap_n", "symbols": ["VP_num_sing_fin_p_gap_n"], "postprocess": (args) => node("VP'", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP__num_sing_fin_p_gap_sing$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "VP__num_sing_fin_p_gap_sing", "symbols": ["AUX_num_sing_fin_p", "_", "VP__num_sing_fin_p_gap_sing$string$1", "_", "VP_num_sing_fin_n_gap_sing"], "postprocess": (args) => node("VP'", {"num":"sing","fin":"+","gap":"sing"}, args)},
    {"name": "VP__num_sing_fin_p_gap_sing", "symbols": ["VP_num_sing_fin_p_gap_sing"], "postprocess": (args) => node("VP'", {"num":"sing","fin":"+","gap":"sing"}, args)},
    {"name": "VP__num_sing_fin_p_gap_plur$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "VP__num_sing_fin_p_gap_plur", "symbols": ["AUX_num_sing_fin_p", "_", "VP__num_sing_fin_p_gap_plur$string$1", "_", "VP_num_sing_fin_n_gap_plur"], "postprocess": (args) => node("VP'", {"num":"sing","fin":"+","gap":"plur"}, args)},
    {"name": "VP__num_sing_fin_p_gap_plur", "symbols": ["VP_num_sing_fin_p_gap_plur"], "postprocess": (args) => node("VP'", {"num":"sing","fin":"+","gap":"plur"}, args)},
    {"name": "VP__num_plur_fin_p_gap_n$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "VP__num_plur_fin_p_gap_n", "symbols": ["AUX_num_plur_fin_p", "_", "VP__num_plur_fin_p_gap_n$string$1", "_", "VP_num_plur_fin_n_gap_n"], "postprocess": (args) => node("VP'", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP__num_plur_fin_p_gap_n", "symbols": ["VP_num_plur_fin_p_gap_n"], "postprocess": (args) => node("VP'", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP__num_plur_fin_p_gap_sing$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "VP__num_plur_fin_p_gap_sing", "symbols": ["AUX_num_plur_fin_p", "_", "VP__num_plur_fin_p_gap_sing$string$1", "_", "VP_num_plur_fin_n_gap_sing"], "postprocess": (args) => node("VP'", {"num":"plur","fin":"+","gap":"sing"}, args)},
    {"name": "VP__num_plur_fin_p_gap_sing", "symbols": ["VP_num_plur_fin_p_gap_sing"], "postprocess": (args) => node("VP'", {"num":"plur","fin":"+","gap":"sing"}, args)},
    {"name": "VP__num_plur_fin_p_gap_plur$string$1", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "VP__num_plur_fin_p_gap_plur", "symbols": ["AUX_num_plur_fin_p", "_", "VP__num_plur_fin_p_gap_plur$string$1", "_", "VP_num_plur_fin_n_gap_plur"], "postprocess": (args) => node("VP'", {"num":"plur","fin":"+","gap":"plur"}, args)},
    {"name": "VP__num_plur_fin_p_gap_plur", "symbols": ["VP_num_plur_fin_p_gap_plur"], "postprocess": (args) => node("VP'", {"num":"plur","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_p_gap_sing", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"sing"}, args)},
    {"name": "VP_num_sing_fin_p_gap_sing", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"sing"}, args)},
    {"name": "VP_num_sing_fin_p_gap_sing", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"sing"}, args)},
    {"name": "VP_num_sing_fin_p_gap_plur", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_p_gap_plur", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_p_gap_plur", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_n_gap_sing", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"sing"}, args)},
    {"name": "VP_num_sing_fin_n_gap_sing", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"sing"}, args)},
    {"name": "VP_num_sing_fin_n_gap_sing", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"sing"}, args)},
    {"name": "VP_num_sing_fin_n_gap_plur", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_n_gap_plur", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_n_gap_plur", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"plur"}, args)},
    {"name": "VP_num_plur_fin_p_gap_sing", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"sing"}, args)},
    {"name": "VP_num_plur_fin_p_gap_sing", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"sing"}, args)},
    {"name": "VP_num_plur_fin_p_gap_sing", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"sing"}, args)},
    {"name": "VP_num_plur_fin_p_gap_plur", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_plur_fin_p_gap_plur", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_plur_fin_p_gap_plur", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"plur"}, args)},
    {"name": "VP_num_plur_fin_n_gap_sing", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"sing"}, args)},
    {"name": "VP_num_plur_fin_n_gap_sing", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"sing"}, args)},
    {"name": "VP_num_plur_fin_n_gap_sing", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_sing"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"sing"}, args)},
    {"name": "VP_num_plur_fin_n_gap_plur", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"plur"}, args)},
    {"name": "VP_num_plur_fin_n_gap_plur", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"plur"}, args)},
    {"name": "VP_num_plur_fin_n_gap_plur", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_plur"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"plur"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_p_gap_n", "symbols": ["V_num_sing_fin_p_trans_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_sing_fin_n_gap_n", "symbols": ["V_num_sing_fin_n_trans_n"], "postprocess": (args) => node("VP", {"num":"sing","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_p_gap_n", "symbols": ["V_num_plur_fin_p_trans_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"+","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_p", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "VP_num_plur_fin_n_gap_n", "symbols": ["V_num_plur_fin_n_trans_n"], "postprocess": (args) => node("VP", {"num":"plur","fin":"-","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_male_case_pnom_gap_sing", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"+nom","gap":"sing"}, args)},
    {"name": "NP_num_sing_gen_male_case_nnom_gap_sing", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"-nom","gap":"sing"}, args)},
    {"name": "NP_num_sing_gen_fem_case_pnom_gap_sing", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"+nom","gap":"sing"}, args)},
    {"name": "NP_num_sing_gen_fem_case_nnom_gap_sing", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"-nom","gap":"sing"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_pnom_gap_sing", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"+nom","gap":"sing"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_nnom_gap_sing", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"-nom","gap":"sing"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_plur", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"plur"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_plur", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"plur"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_plur", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"plur"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_plur", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"plur"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_plur", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"plur"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_plur", "symbols": ["GAP"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"plur"}, args)},
    {"name": "NP_num_sing_gen_male_case_pnom_gap_n", "symbols": ["DET_num_sing", "_", "N_num_sing_gen_male"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_male_case_pnom_gap_n", "symbols": ["PN_num_sing_gen_male"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_male_case_pnom_gap_n", "symbols": ["PRO_num_sing_gen_male_case_pnom"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_male_case_nnom_gap_n", "symbols": ["DET_num_sing", "_", "N_num_sing_gen_male"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_male_case_nnom_gap_n", "symbols": ["PN_num_sing_gen_male"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_male_case_nnom_gap_n", "symbols": ["PRO_num_sing_gen_male_case_nnom"], "postprocess": (args) => node("NP", {"num":"sing","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_fem_case_pnom_gap_n", "symbols": ["DET_num_sing", "_", "N_num_sing_gen_fem"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_fem_case_pnom_gap_n", "symbols": ["PN_num_sing_gen_fem"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_fem_case_pnom_gap_n", "symbols": ["PRO_num_sing_gen_fem_case_pnom"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_fem_case_nnom_gap_n", "symbols": ["DET_num_sing", "_", "N_num_sing_gen_fem"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_fem_case_nnom_gap_n", "symbols": ["PN_num_sing_gen_fem"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_fem_case_nnom_gap_n", "symbols": ["PRO_num_sing_gen_fem_case_nnom"], "postprocess": (args) => node("NP", {"num":"sing","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_pnom_gap_n", "symbols": ["DET_num_sing", "_", "N_num_sing_gen_nhum"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_pnom_gap_n", "symbols": ["PN_num_sing_gen_nhum"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_pnom_gap_n", "symbols": ["PRO_num_sing_gen_nhum_case_pnom"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_nnom_gap_n", "symbols": ["DET_num_sing", "_", "N_num_sing_gen_nhum"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_nnom_gap_n", "symbols": ["PN_num_sing_gen_nhum"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_sing_gen_nhum_case_nnom_gap_n", "symbols": ["PRO_num_sing_gen_nhum_case_nnom"], "postprocess": (args) => node("NP", {"num":"sing","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["DET_num_plur", "_", "N_num_plur_gen_male"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["PN_num_plur_gen_male"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["PRO_num_plur_gen_male_case_pnom"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$1", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$2", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$2", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$3", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$3", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$4", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$5", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$5", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$6", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$6", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$7", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$7", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$8", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$8", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$9", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$9", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$10", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$10", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$11", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$11", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$12", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$12", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$13", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$13", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$14", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$14", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$15", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$15", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$16", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$16", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$17", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$17", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$18", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$18", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$19", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$19", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$20", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$20", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$21", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$21", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$22", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$22", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$23", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$23", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$24", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$24", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$25", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$25", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$26", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$26", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$27", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$27", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$28", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$28", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$29", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$29", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$30", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$30", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$31", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$31", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$32", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$32", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$33", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$33", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$34", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$34", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$35", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$35", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n$string$36", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_male_case_pnom_gap_n$string$36", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["DET_num_plur", "_", "N_num_plur_gen_male"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["PN_num_plur_gen_male"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["PRO_num_plur_gen_male_case_nnom"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$1", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$2", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$2", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$3", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$3", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$4", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$5", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$5", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$6", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$6", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$7", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$7", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$8", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$8", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$9", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$9", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$10", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$10", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$11", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$11", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$12", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$12", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$13", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$13", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$14", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$14", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$15", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$15", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$16", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$16", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$17", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$17", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$18", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$18", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$19", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$19", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$20", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$20", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$21", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$21", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$22", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$22", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$23", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$23", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$24", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$24", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$25", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$25", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$26", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$26", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$27", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$27", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$28", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$28", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$29", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$29", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$30", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$30", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$31", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$31", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$32", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$32", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$33", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$33", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$34", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$34", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$35", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$35", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n$string$36", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_male_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_male_case_nnom_gap_n$string$36", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"male","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["DET_num_plur", "_", "N_num_plur_gen_fem"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["PN_num_plur_gen_fem"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["PRO_num_plur_gen_fem_case_pnom"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$1", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$2", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$2", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$3", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$3", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$4", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$5", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$5", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$6", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$6", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$7", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$7", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$8", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$8", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$9", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$9", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$10", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$10", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$11", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$11", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$12", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$12", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$13", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$13", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$14", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$14", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$15", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$15", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$16", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$16", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$17", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$17", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$18", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$18", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$19", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$19", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$20", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$20", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$21", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$21", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$22", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$22", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$23", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$23", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$24", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$24", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$25", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$25", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$26", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$26", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$27", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$27", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$28", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$28", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$29", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$29", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$30", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$30", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$31", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$31", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$32", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$32", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$33", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$33", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$34", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$34", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$35", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$35", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n$string$36", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_fem_case_pnom_gap_n$string$36", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["DET_num_plur", "_", "N_num_plur_gen_fem"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["PN_num_plur_gen_fem"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["PRO_num_plur_gen_fem_case_nnom"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$1", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$2", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$2", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$3", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$3", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$4", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$5", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$5", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$6", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$6", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$7", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$7", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$8", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$8", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$9", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$9", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$10", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$10", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$11", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$11", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$12", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$12", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$13", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$13", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$14", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$14", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$15", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$15", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$16", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$16", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$17", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$17", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$18", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$18", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$19", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$19", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$20", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$20", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$21", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$21", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$22", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$22", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$23", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$23", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$24", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$24", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$25", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$25", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$26", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$26", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$27", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$27", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$28", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$28", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$29", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$29", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$30", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$30", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$31", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$31", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$32", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$32", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$33", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$33", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$34", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$34", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$35", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$35", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n$string$36", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_fem_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_fem_case_nnom_gap_n$string$36", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"fem","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["DET_num_plur", "_", "N_num_plur_gen_nhum"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["PN_num_plur_gen_nhum"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["PRO_num_plur_gen_nhum_case_pnom"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$1", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$2", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$2", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$3", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$3", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$4", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$5", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$5", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$6", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$6", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$7", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$7", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$8", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$8", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$9", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$9", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$10", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$10", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$11", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$11", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$12", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$12", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$13", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$13", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$14", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$14", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$15", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$15", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$16", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$16", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$17", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$17", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$18", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$18", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$19", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$19", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$20", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$20", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$21", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$21", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$22", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$22", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$23", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$23", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$24", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$24", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$25", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$25", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$26", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$26", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$27", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$27", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$28", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$28", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$29", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$29", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$30", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$30", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$31", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$31", "_", "NP_num_sing_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$32", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$32", "_", "NP_num_sing_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$33", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$33", "_", "NP_num_sing_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$34", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$34", "_", "NP_num_plur_gen_male_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$35", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$35", "_", "NP_num_plur_gen_fem_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n$string$36", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_pnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_pnom_gap_n", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n$string$36", "_", "NP_num_plur_gen_nhum_case_pnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"+nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["DET_num_plur", "_", "N_num_plur_gen_nhum"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["PN_num_plur_gen_nhum"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["PRO_num_plur_gen_nhum_case_nnom"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$1", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$1", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$2", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$2", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$3", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$3", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$4", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$4", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$5", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$5", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$6", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$6", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$7", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$7", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$8", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$8", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$9", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$9", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$10", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$10", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$11", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$11", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$12", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$12", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$13", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$13", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$14", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$14", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$15", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$15", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$16", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$16", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$17", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$17", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$18", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_sing_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$18", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$19", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$19", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$20", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$20", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$21", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$21", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$22", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$22", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$23", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$23", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$24", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_male_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$24", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$25", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$25", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$26", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$26", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$27", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$27", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$28", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$28", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$29", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$29", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$30", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_fem_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$30", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$31", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$31", "_", "NP_num_sing_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$32", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$32", "_", "NP_num_sing_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$33", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$33", "_", "NP_num_sing_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$34", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$34", "_", "NP_num_plur_gen_male_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$35", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$35", "_", "NP_num_plur_gen_fem_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n$string$36", "symbols": [{"literal":"a"}, {"literal":"n"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "NP_num_plur_gen_nhum_case_nnom_gap_n", "symbols": ["NP_num_plur_gen_nhum_case_nnom_gap_n", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n$string$36", "_", "NP_num_plur_gen_nhum_case_nnom_gap_n"], "postprocess": (args) => node("NP", {"num":"plur","gen":"-hum","case":"-nom","gap":"-"}, args)},
    {"name": "N_num_sing_gen_male", "symbols": ["N_num_sing_gen_male", "_", "RC_num_sing_gen_male"], "postprocess": (args) => node("N", {"num":"sing","gen":"male"}, args)},
    {"name": "N_num_sing_gen_male$string$1", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"o"}, {"literal":"c"}, {"literal":"k"}, {"literal":"b"}, {"literal":"r"}, {"literal":"o"}, {"literal":"k"}, {"literal":"e"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_male", "symbols": ["N_num_sing_gen_male$string$1"], "postprocess": (args) => node("N", {"num":"sing","gen":"male"}, args)},
    {"name": "N_num_sing_gen_male$string$2", "symbols": [{"literal":"m"}, {"literal":"a"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_male", "symbols": ["N_num_sing_gen_male$string$2"], "postprocess": (args) => node("N", {"num":"sing","gen":"male"}, args)},
    {"name": "N_num_sing_gen_fem", "symbols": ["N_num_sing_gen_fem", "_", "RC_num_sing_gen_fem"], "postprocess": (args) => node("N", {"num":"sing","gen":"fem"}, args)},
    {"name": "N_num_sing_gen_fem$string$1", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"o"}, {"literal":"c"}, {"literal":"k"}, {"literal":"b"}, {"literal":"r"}, {"literal":"o"}, {"literal":"k"}, {"literal":"e"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_fem", "symbols": ["N_num_sing_gen_fem$string$1"], "postprocess": (args) => node("N", {"num":"sing","gen":"fem"}, args)},
    {"name": "N_num_sing_gen_fem$string$2", "symbols": [{"literal":"w"}, {"literal":"o"}, {"literal":"m"}, {"literal":"a"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_fem", "symbols": ["N_num_sing_gen_fem$string$2"], "postprocess": (args) => node("N", {"num":"sing","gen":"fem"}, args)},
    {"name": "N_num_sing_gen_fem$string$3", "symbols": [{"literal":"w"}, {"literal":"i"}, {"literal":"d"}, {"literal":"o"}, {"literal":"w"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_fem", "symbols": ["N_num_sing_gen_fem$string$3"], "postprocess": (args) => node("N", {"num":"sing","gen":"fem"}, args)},
    {"name": "N_num_sing_gen_nhum", "symbols": ["N_num_sing_gen_nhum", "_", "RC_num_sing_gen_nhum"], "postprocess": (args) => node("N", {"num":"sing","gen":"-hum"}, args)},
    {"name": "N_num_sing_gen_nhum$string$1", "symbols": [{"literal":"b"}, {"literal":"o"}, {"literal":"o"}, {"literal":"k"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_nhum", "symbols": ["N_num_sing_gen_nhum$string$1"], "postprocess": (args) => node("N", {"num":"sing","gen":"-hum"}, args)},
    {"name": "N_num_sing_gen_nhum$string$2", "symbols": [{"literal":"d"}, {"literal":"o"}, {"literal":"n"}, {"literal":"k"}, {"literal":"e"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_nhum", "symbols": ["N_num_sing_gen_nhum$string$2"], "postprocess": (args) => node("N", {"num":"sing","gen":"-hum"}, args)},
    {"name": "N_num_sing_gen_nhum$string$3", "symbols": [{"literal":"h"}, {"literal":"o"}, {"literal":"r"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "N_num_sing_gen_nhum", "symbols": ["N_num_sing_gen_nhum$string$3"], "postprocess": (args) => node("N", {"num":"sing","gen":"-hum"}, args)},
    {"name": "N_num_plur_gen_male", "symbols": ["N_num_plur_gen_male", "_", "RC_num_plur_gen_male"], "postprocess": (args) => node("N", {"num":"plur","gen":"male"}, args)},
    {"name": "N_num_plur_gen_fem", "symbols": ["N_num_plur_gen_fem", "_", "RC_num_plur_gen_fem"], "postprocess": (args) => node("N", {"num":"plur","gen":"fem"}, args)},
    {"name": "N_num_plur_gen_nhum", "symbols": ["N_num_plur_gen_nhum", "_", "RC_num_plur_gen_nhum"], "postprocess": (args) => node("N", {"num":"plur","gen":"-hum"}, args)},
    {"name": "RC_num_sing_gen_male", "symbols": ["RPRO_num_sing_gen_male", "_", "S_num_sing_gap_sing"], "postprocess": (args) => node("RC", {"num":"sing","gen":"male"}, args)},
    {"name": "RC_num_sing_gen_male", "symbols": ["RPRO_num_sing_gen_male", "_", "S_num_plur_gap_sing"], "postprocess": (args) => node("RC", {"num":"sing","gen":"male"}, args)},
    {"name": "RC_num_sing_gen_fem", "symbols": ["RPRO_num_sing_gen_fem", "_", "S_num_sing_gap_sing"], "postprocess": (args) => node("RC", {"num":"sing","gen":"fem"}, args)},
    {"name": "RC_num_sing_gen_fem", "symbols": ["RPRO_num_sing_gen_fem", "_", "S_num_plur_gap_sing"], "postprocess": (args) => node("RC", {"num":"sing","gen":"fem"}, args)},
    {"name": "RC_num_sing_gen_nhum", "symbols": ["RPRO_num_sing_gen_nhum", "_", "S_num_sing_gap_sing"], "postprocess": (args) => node("RC", {"num":"sing","gen":"-hum"}, args)},
    {"name": "RC_num_sing_gen_nhum", "symbols": ["RPRO_num_sing_gen_nhum", "_", "S_num_plur_gap_sing"], "postprocess": (args) => node("RC", {"num":"sing","gen":"-hum"}, args)},
    {"name": "RC_num_plur_gen_male", "symbols": ["RPRO_num_plur_gen_male", "_", "S_num_sing_gap_plur"], "postprocess": (args) => node("RC", {"num":"plur","gen":"male"}, args)},
    {"name": "RC_num_plur_gen_male", "symbols": ["RPRO_num_plur_gen_male", "_", "S_num_plur_gap_plur"], "postprocess": (args) => node("RC", {"num":"plur","gen":"male"}, args)},
    {"name": "RC_num_plur_gen_fem", "symbols": ["RPRO_num_plur_gen_fem", "_", "S_num_sing_gap_plur"], "postprocess": (args) => node("RC", {"num":"plur","gen":"fem"}, args)},
    {"name": "RC_num_plur_gen_fem", "symbols": ["RPRO_num_plur_gen_fem", "_", "S_num_plur_gap_plur"], "postprocess": (args) => node("RC", {"num":"plur","gen":"fem"}, args)},
    {"name": "RC_num_plur_gen_nhum", "symbols": ["RPRO_num_plur_gen_nhum", "_", "S_num_sing_gap_plur"], "postprocess": (args) => node("RC", {"num":"plur","gen":"-hum"}, args)},
    {"name": "RC_num_plur_gen_nhum", "symbols": ["RPRO_num_plur_gen_nhum", "_", "S_num_plur_gap_plur"], "postprocess": (args) => node("RC", {"num":"plur","gen":"-hum"}, args)},
    {"name": "DET_num_sing", "symbols": [{"literal":"a"}], "postprocess": (args) => node("DET", {"num":"sing"}, args)},
    {"name": "DET_num_sing$string$1", "symbols": [{"literal":"e"}, {"literal":"v"}, {"literal":"e"}, {"literal":"r"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$string$1"], "postprocess": (args) => node("DET", {"num":"sing"}, args)},
    {"name": "DET_num_sing$string$2", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$string$2"], "postprocess": (args) => node("DET", {"num":"sing"}, args)},
    {"name": "DET_num_sing$string$3", "symbols": [{"literal":"s"}, {"literal":"o"}, {"literal":"m"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "DET_num_sing", "symbols": ["DET_num_sing$string$3"], "postprocess": (args) => node("DET", {"num":"sing"}, args)},
    {"name": "PRO_num_sing_gen_male_case_pnom$string$1", "symbols": [{"literal":"h"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_sing_gen_male_case_pnom", "symbols": ["PRO_num_sing_gen_male_case_pnom$string$1"], "postprocess": (args) => node("PRO", {"num":"sing","gen":"male","case":"+nom"}, args)},
    {"name": "PRO_num_sing_gen_male_case_nnom$string$1", "symbols": [{"literal":"h"}, {"literal":"i"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_sing_gen_male_case_nnom", "symbols": ["PRO_num_sing_gen_male_case_nnom$string$1"], "postprocess": (args) => node("PRO", {"num":"sing","gen":"male","case":"-nom"}, args)},
    {"name": "PRO_num_sing_gen_fem_case_pnom$string$1", "symbols": [{"literal":"s"}, {"literal":"h"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_sing_gen_fem_case_pnom", "symbols": ["PRO_num_sing_gen_fem_case_pnom$string$1"], "postprocess": (args) => node("PRO", {"num":"sing","gen":"fem","case":"+nom"}, args)},
    {"name": "PRO_num_sing_gen_fem_case_nnom$string$1", "symbols": [{"literal":"h"}, {"literal":"e"}, {"literal":"r"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_sing_gen_fem_case_nnom", "symbols": ["PRO_num_sing_gen_fem_case_nnom$string$1"], "postprocess": (args) => node("PRO", {"num":"sing","gen":"fem","case":"-nom"}, args)},
    {"name": "PRO_num_sing_gen_nhum_case_nnom$string$1", "symbols": [{"literal":"i"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_sing_gen_nhum_case_nnom", "symbols": ["PRO_num_sing_gen_nhum_case_nnom$string$1"], "postprocess": (args) => node("PRO", {"num":"sing","gen":"-hum","case":"-nom"}, args)},
    {"name": "PRO_num_sing_gen_nhum_case_pnom$string$1", "symbols": [{"literal":"i"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_sing_gen_nhum_case_pnom", "symbols": ["PRO_num_sing_gen_nhum_case_pnom$string$1"], "postprocess": (args) => node("PRO", {"num":"sing","gen":"-hum","case":"+nom"}, args)},
    {"name": "PRO_num_plur_gen_male_case_pnom$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_plur_gen_male_case_pnom", "symbols": ["PRO_num_plur_gen_male_case_pnom$string$1"], "postprocess": (args) => node("PRO", {"num":"plur","gen":"male","case":"+nom"}, args)},
    {"name": "PRO_num_plur_gen_fem_case_pnom$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_plur_gen_fem_case_pnom", "symbols": ["PRO_num_plur_gen_fem_case_pnom$string$1"], "postprocess": (args) => node("PRO", {"num":"plur","gen":"fem","case":"+nom"}, args)},
    {"name": "PRO_num_plur_gen_nhum_case_pnom$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_plur_gen_nhum_case_pnom", "symbols": ["PRO_num_plur_gen_nhum_case_pnom$string$1"], "postprocess": (args) => node("PRO", {"num":"plur","gen":"-hum","case":"+nom"}, args)},
    {"name": "PRO_num_plur_gen_male_case_nnom$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_plur_gen_male_case_nnom", "symbols": ["PRO_num_plur_gen_male_case_nnom$string$1"], "postprocess": (args) => node("PRO", {"num":"plur","gen":"male","case":"-nom"}, args)},
    {"name": "PRO_num_plur_gen_fem_case_nnom$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_plur_gen_fem_case_nnom", "symbols": ["PRO_num_plur_gen_fem_case_nnom$string$1"], "postprocess": (args) => node("PRO", {"num":"plur","gen":"fem","case":"-nom"}, args)},
    {"name": "PRO_num_plur_gen_nhum_case_nnom$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PRO_num_plur_gen_nhum_case_nnom", "symbols": ["PRO_num_plur_gen_nhum_case_nnom$string$1"], "postprocess": (args) => node("PRO", {"num":"plur","gen":"-hum","case":"-nom"}, args)},
    {"name": "PN_num_sing_gen_male$string$1", "symbols": [{"literal":"J"}, {"literal":"o"}, {"literal":"n"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PN_num_sing_gen_male", "symbols": ["PN_num_sing_gen_male$string$1"], "postprocess": (args) => node("PN", {"num":"sing","gen":"male"}, args)},
    {"name": "PN_num_sing_gen_male$string$2", "symbols": [{"literal":"J"}, {"literal":"o"}, {"literal":"h"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PN_num_sing_gen_male", "symbols": ["PN_num_sing_gen_male$string$2"], "postprocess": (args) => node("PN", {"num":"sing","gen":"male"}, args)},
    {"name": "PN_num_sing_gen_fem$string$1", "symbols": [{"literal":"M"}, {"literal":"a"}, {"literal":"r"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PN_num_sing_gen_fem", "symbols": ["PN_num_sing_gen_fem$string$1"], "postprocess": (args) => node("PN", {"num":"sing","gen":"fem"}, args)},
    {"name": "PN_num_sing_gen_fem$string$2", "symbols": [{"literal":"A"}, {"literal":"n"}, {"literal":"n"}, {"literal":"a"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PN_num_sing_gen_fem", "symbols": ["PN_num_sing_gen_fem$string$2"], "postprocess": (args) => node("PN", {"num":"sing","gen":"fem"}, args)},
    {"name": "PN_num_sing_gen_nhum$string$1", "symbols": [{"literal":"B"}, {"literal":"r"}, {"literal":"a"}, {"literal":"z"}, {"literal":"i"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PN_num_sing_gen_nhum", "symbols": ["PN_num_sing_gen_nhum$string$1"], "postprocess": (args) => node("PN", {"num":"sing","gen":"-hum"}, args)},
    {"name": "PN_num_sing_gen_nhum$string$2", "symbols": [{"literal":"I"}, {"literal":"t"}, {"literal":"a"}, {"literal":"l"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "PN_num_sing_gen_nhum", "symbols": ["PN_num_sing_gen_nhum$string$2"], "postprocess": (args) => node("PN", {"num":"sing","gen":"-hum"}, args)},
    {"name": "AUX_num_sing_fin_p$string$1", "symbols": [{"literal":"d"}, {"literal":"o"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "AUX_num_sing_fin_p", "symbols": ["AUX_num_sing_fin_p$string$1"], "postprocess": (args) => node("AUX", {"num":"sing","fin":"+"}, args)},
    {"name": "AUX_num_plur_fin_p$string$1", "symbols": [{"literal":"d"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "AUX_num_plur_fin_p", "symbols": ["AUX_num_plur_fin_p$string$1"], "postprocess": (args) => node("AUX", {"num":"plur","fin":"+"}, args)},
    {"name": "V_num_sing_fin_n_trans_p$string$1", "symbols": [{"literal":"l"}, {"literal":"i"}, {"literal":"k"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_n_trans_p", "symbols": ["V_num_sing_fin_n_trans_p$string$1"], "postprocess": (args) => node("V", {"num":"sing","fin":"-","trans":"+"}, args)},
    {"name": "V_num_sing_fin_n_trans_p$string$2", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_n_trans_p", "symbols": ["V_num_sing_fin_n_trans_p$string$2"], "postprocess": (args) => node("V", {"num":"sing","fin":"-","trans":"+"}, args)},
    {"name": "V_num_sing_fin_n_trans_p$string$3", "symbols": [{"literal":"o"}, {"literal":"w"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_n_trans_p", "symbols": ["V_num_sing_fin_n_trans_p$string$3"], "postprocess": (args) => node("V", {"num":"sing","fin":"-","trans":"+"}, args)},
    {"name": "V_num_sing_fin_n_trans_p$string$4", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"s"}, {"literal":"c"}, {"literal":"i"}, {"literal":"n"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_n_trans_p", "symbols": ["V_num_sing_fin_n_trans_p$string$4"], "postprocess": (args) => node("V", {"num":"sing","fin":"-","trans":"+"}, args)},
    {"name": "V_num_plur_fin_n_trans_p$string$1", "symbols": [{"literal":"l"}, {"literal":"i"}, {"literal":"k"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_n_trans_p", "symbols": ["V_num_plur_fin_n_trans_p$string$1"], "postprocess": (args) => node("V", {"num":"plur","fin":"-","trans":"+"}, args)},
    {"name": "V_num_plur_fin_n_trans_p$string$2", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_n_trans_p", "symbols": ["V_num_plur_fin_n_trans_p$string$2"], "postprocess": (args) => node("V", {"num":"plur","fin":"-","trans":"+"}, args)},
    {"name": "V_num_plur_fin_n_trans_p$string$3", "symbols": [{"literal":"o"}, {"literal":"w"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_n_trans_p", "symbols": ["V_num_plur_fin_n_trans_p$string$3"], "postprocess": (args) => node("V", {"num":"plur","fin":"-","trans":"+"}, args)},
    {"name": "V_num_plur_fin_n_trans_p$string$4", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"s"}, {"literal":"c"}, {"literal":"i"}, {"literal":"n"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_n_trans_p", "symbols": ["V_num_plur_fin_n_trans_p$string$4"], "postprocess": (args) => node("V", {"num":"plur","fin":"-","trans":"+"}, args)},
    {"name": "V_num_sing_fin_n_trans_n$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_n_trans_n", "symbols": ["V_num_sing_fin_n_trans_n$string$1"], "postprocess": (args) => node("V", {"num":"sing","fin":"-","trans":"-"}, args)},
    {"name": "V_num_sing_fin_n_trans_n$string$2", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"k"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_n_trans_n", "symbols": ["V_num_sing_fin_n_trans_n$string$2"], "postprocess": (args) => node("V", {"num":"sing","fin":"-","trans":"-"}, args)},
    {"name": "V_num_plur_fin_n_trans_n$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_n_trans_n", "symbols": ["V_num_plur_fin_n_trans_n$string$1"], "postprocess": (args) => node("V", {"num":"plur","fin":"-","trans":"-"}, args)},
    {"name": "V_num_plur_fin_n_trans_n$string$2", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"k"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_n_trans_n", "symbols": ["V_num_plur_fin_n_trans_n$string$2"], "postprocess": (args) => node("V", {"num":"plur","fin":"-","trans":"-"}, args)},
    {"name": "V_num_sing_fin_p_trans_p$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_p", "symbols": ["V_num_sing_fin_p_trans_p$string$1"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"+"}, args)},
    {"name": "V_num_sing_fin_p_trans_p$string$2", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"k"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_p", "symbols": ["V_num_sing_fin_p_trans_p$string$2"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"+"}, args)},
    {"name": "V_num_sing_fin_p_trans_p$string$3", "symbols": [{"literal":"s"}, {"literal":"u"}, {"literal":"r"}, {"literal":"p"}, {"literal":"r"}, {"literal":"i"}, {"literal":"s"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_p", "symbols": ["V_num_sing_fin_p_trans_p$string$3"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"+"}, args)},
    {"name": "V_num_sing_fin_p_trans_p$string$4", "symbols": [{"literal":"k"}, {"literal":"n"}, {"literal":"o"}, {"literal":"w"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_p", "symbols": ["V_num_sing_fin_p_trans_p$string$4"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"+"}, args)},
    {"name": "V_num_sing_fin_p_trans_n$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_n", "symbols": ["V_num_sing_fin_p_trans_n$string$1"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"-"}, args)},
    {"name": "V_num_sing_fin_p_trans_n$string$2", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"k"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_n", "symbols": ["V_num_sing_fin_p_trans_n$string$2"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"-"}, args)},
    {"name": "V_num_sing_fin_p_trans_n$string$3", "symbols": [{"literal":"s"}, {"literal":"u"}, {"literal":"r"}, {"literal":"p"}, {"literal":"r"}, {"literal":"i"}, {"literal":"s"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_n", "symbols": ["V_num_sing_fin_p_trans_n$string$3"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"-"}, args)},
    {"name": "V_num_sing_fin_p_trans_n$string$4", "symbols": [{"literal":"k"}, {"literal":"n"}, {"literal":"o"}, {"literal":"w"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_sing_fin_p_trans_n", "symbols": ["V_num_sing_fin_p_trans_n$string$4"], "postprocess": (args) => node("V", {"num":"sing","fin":"+","trans":"-"}, args)},
    {"name": "V_num_plur_fin_p_trans_p$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_p_trans_p", "symbols": ["V_num_plur_fin_p_trans_p$string$1"], "postprocess": (args) => node("V", {"num":"plur","fin":"+","trans":"+"}, args)},
    {"name": "V_num_plur_fin_p_trans_p$string$2", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"k"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_p_trans_p", "symbols": ["V_num_plur_fin_p_trans_p$string$2"], "postprocess": (args) => node("V", {"num":"plur","fin":"+","trans":"+"}, args)},
    {"name": "V_num_plur_fin_p_trans_n$string$1", "symbols": [{"literal":"l"}, {"literal":"o"}, {"literal":"v"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_p_trans_n", "symbols": ["V_num_plur_fin_p_trans_n$string$1"], "postprocess": (args) => node("V", {"num":"plur","fin":"+","trans":"-"}, args)},
    {"name": "V_num_plur_fin_p_trans_n$string$2", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"i"}, {"literal":"n"}, {"literal":"k"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "V_num_plur_fin_p_trans_n", "symbols": ["V_num_plur_fin_p_trans_n$string$2"], "postprocess": (args) => node("V", {"num":"plur","fin":"+","trans":"-"}, args)},
    {"name": "RPRO_num_sing_gen_male$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RPRO_num_sing_gen_male", "symbols": ["RPRO_num_sing_gen_male$string$1"], "postprocess": (args) => node("RPRO", {"num":"sing","gen":"male"}, args)},
    {"name": "RPRO_num_sing_gen_fem$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RPRO_num_sing_gen_fem", "symbols": ["RPRO_num_sing_gen_fem$string$1"], "postprocess": (args) => node("RPRO", {"num":"sing","gen":"fem"}, args)},
    {"name": "RPRO_num_plur_gen_male$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RPRO_num_plur_gen_male", "symbols": ["RPRO_num_plur_gen_male$string$1"], "postprocess": (args) => node("RPRO", {"num":"plur","gen":"male"}, args)},
    {"name": "RPRO_num_plur_gen_fem$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RPRO_num_plur_gen_fem", "symbols": ["RPRO_num_plur_gen_fem$string$1"], "postprocess": (args) => node("RPRO", {"num":"plur","gen":"fem"}, args)},
    {"name": "RPRO_num_sing_gen_nhum$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"i"}, {"literal":"c"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RPRO_num_sing_gen_nhum", "symbols": ["RPRO_num_sing_gen_nhum$string$1"], "postprocess": (args) => node("RPRO", {"num":"sing","gen":"-hum"}, args)},
    {"name": "RPRO_num_plur_gen_nhum$string$1", "symbols": [{"literal":"w"}, {"literal":"h"}, {"literal":"i"}, {"literal":"c"}, {"literal":"h"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "RPRO_num_plur_gen_nhum", "symbols": ["RPRO_num_plur_gen_nhum$string$1"], "postprocess": (args) => node("RPRO", {"num":"plur","gen":"-hum"}, args)},
    {"name": "GAP", "symbols": [], "postprocess": (args) => node("GAP", {}, args)}
]
  , ParserStart: "S"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
